{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///./node_modules/date-fns/esm/parseISO/index.js","webpack:///./src/components/disqus/index.js","webpack:///./src/templates/post-template.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js","webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","argument","dirtyOptions","arguments","length","TypeError","options","additionalDigits","RangeError","Object","prototype","toString","call","Date","date","dateStrings","dateString","timeString","array","split","test","substr","token","exec","time","replace","splitDateString","parseYearResult","regex","RegExp","captures","match","year","parseInt","century","restDateString","slice","parseYear","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseDate","offset","timestamp","getTime","hours","parseTimeUnit","minutes","seconds","validateTime","parseTime","timezoneString","sign","_hours","validateTimezone","parseTimezone","fullTime","fullTimeDate","fullTimeDateDiffDay","setDate","getDate","offsetDiff","value","parseFloat","Disqus","props","state","toasts","notifyAboutComment","bind","onSnackbarDismiss","this","setState","text","render","postNode","data","site","siteMetadata","siteUrl","disqusShortname","post","frontmatter","fullUrl","fields","slug","shortname","identifier","title","url","category_id","onNewComment","Component","query","PostTemplate","markdownRemark","postTitle","description","tags","tagSlugs","html","tagsBlock","className","map","tag","i","key","to","name","content","dangerouslySetInnerHTML","__html","format","pageQuery","getTimezoneOffsetInMilliseconds","dirtyDate","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","module","exports","defineProperty","_extends","assign","target","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","DISQUS_CONFIG","__disqusAdded","copyProps","context","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","createElement","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","func","defaultProps","location","href","toDate","argStr","console","warn","Error","stack","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","full","medium","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","predicate","findIndex","pattern","object","findKey","valueCallback","code","formatDistance","count","result","addSuffix","comparison","formatLong","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","index","weekStartsOn","firstWeekContainsDate","subMilliseconds","dirtyAmount","amount","addMilliseconds","addLeadingZeros","targetLength","output","abs","y","signedYear","getUTCFullYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","MILLISECONDS_IN_DAY","startOfUTCISOWeek","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","MILLISECONDS_IN_WEEK","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","round","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","getUTCWeek","firstWeek","startOfUTCWeekYear","dayPeriodEnum","formatTimezoneShort","dirtyDelimiter","absOffset","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","I","isoWeek","D","setUTCMonth","difference","getUTCDayOfYear","E","e","localDayOfWeek","c","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","isValid","utcDate","formatterOptions","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","it","third","radix","maxCode","first","charCodeAt","digits","l","that","valueOf","j"],"mappings":"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","file":"component---src-templates-post-template-js-8e1e62c9660f102acbb1.js","sourcesContent":["import \"core-js/modules/es6.number.constructor\";\nexport default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport toInteger from '../_lib/toInteger/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var fullTime = timestamp + time;\n    var fullTimeDate = new Date(fullTime);\n    offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n    var fullTimeDateDiffDay = new Date(fullTime);\n\n    if (offset > 0) {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() + 1);\n    } else {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() - 1);\n    }\n\n    var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateDiffDay) - offset;\n\n    if (offsetDiff > 0) {\n      offset += offsetDiff;\n    }\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import React, { Component } from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport { StaticQuery, graphql } from 'gatsby';\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { toasts: [] };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const { toasts } = this.state;\n    this.setState({ toasts: toasts.slice(1) });\n  }\n\n  notifyAboutComment() {\n    const { toasts } = this.state;\n    this.setState({\n      toasts: [...toasts, { text: 'New comment available!!' }],\n    });\n  }\n\n  render() {\n    const {\n      postNode,\n      data: {\n        site: {\n          siteMetadata: {\n            siteUrl,\n            disqusShortname,\n          },\n        },\n      },\n    } = this.props;\n    if (!disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const fullUrl = siteUrl + postNode.fields.slug;\n    return (\n      <ReactDisqusComments\n        shortname={disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={fullUrl}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n            disqusShortname\n          }\n        }\n      }\n    `}\n    render={data => <Disqus {...props} data={data} />}\n  />\n);\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport { format, parseISO } from 'date-fns/esm';\nimport Layout from '#/components/layout';\nimport Disqus from '#/components/disqus';\n\nexport default function PostTemplate(props) {\n  const {\n    data: {\n      site: {\n        siteMetadata: {\n          title,\n        },\n      },\n      markdownRemark: post,\n    },\n  } = props;\n  const {\n    frontmatter: {\n      title: postTitle,\n      description,\n      tags,\n      date,\n    },\n    fields: {\n      tagSlugs,\n    },\n    html,\n  } = post;\n\n  const tagsBlock = tagSlugs && tagSlugs.length > 0 && (\n    <ul className=\"post-tag\">\n      {tagSlugs.map((tag, i) => (\n        <li className=\"post-tag-item\" key={tag}>\n          <Link to={tag}>\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${postTitle} - ${title}`}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      <main className=\"post\">\n        <h1>{postTitle}</h1>\n        <article dangerouslySetInnerHTML={{ __html: html }} />\n        <div className=\"post-date\">\n          <em>\n            Published at\n            {' '}\n            {format(parseISO(date), 'd MMM yyyy')}\n          </em>\n        </div>\n      </main>\n      <footer>\n        {tagsBlock}\n        <Disqus postNode={post} />\n      </footer>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date\n        description\n      }\n    }\n  }\n`;\n","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n  var onNewComment = props.onNewComment,\n      language = props.language,\n      rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n  for (var prop in rest) {\n    context.page[prop] = rest[prop];\n  } // Setting the language - if none is provided, the default one is used\n\n\n  context.language = language;\n\n  if (onNewComment) {\n    context.callbacks = {\n      onNewComment: [onNewComment]\n    };\n  }\n}\n\nvar DisqusThread = function (_React$Component) {\n  _inherits(DisqusThread, _React$Component);\n\n  function DisqusThread() {\n    _classCallCheck(this, DisqusThread);\n\n    return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n  }\n\n  _createClass(DisqusThread, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadDisqus();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.loadDisqus();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.identifier !== this.props.identifier;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = Object.keys(this.props).reduce(function (memo, key) {\n        return DISQUS_CONFIG.some(function (config) {\n          return config === key;\n        }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n      }, {});\n      return _react2[\"default\"].createElement('div', props, _react2[\"default\"].createElement('div', {\n        id: 'disqus_thread'\n      }));\n    }\n  }, {\n    key: 'addDisqusScript',\n    value: function addDisqusScript() {\n      if (__disqusAdded) {\n        return;\n      }\n\n      var child = this.disqus = document.createElement('script');\n      var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n      child.async = true;\n      child.type = 'text/javascript';\n      child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n      parent.appendChild(child);\n      __disqusAdded = true;\n    }\n  }, {\n    key: 'loadDisqus',\n    value: function loadDisqus() {\n      var _this3 = this;\n\n      var props = {}; // Extract Disqus props that were supplied to this component\n\n      DISQUS_CONFIG.forEach(function (prop) {\n        // prop \"shortname\" is only necessary for loading the script, not for the config itself\n        if (prop !== 'shortname' && !!_this3.props[prop]) {\n          props[prop] = _this3.props[prop];\n        }\n      }); // If Disqus has already been added, reset it\n\n      if (typeof DISQUS !== 'undefined') {\n        DISQUS.reset({\n          reload: true,\n          config: function config() {\n            copyProps(this, props); // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n\n            this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n          }\n        });\n      } else {\n        // Otherwise add Disqus to the page\n        window.disqus_config = function () {\n          copyProps(this, props);\n        };\n\n        this.addDisqusScript();\n      }\n    }\n  }]);\n\n  return DisqusThread;\n}(_react2[\"default\"].Component);\n\nDisqusThread.displayName = 'DisqusThread';\nDisqusThread.propTypes = {\n  id: _propTypes2[\"default\"].string,\n\n  /**\n   * `shortname` tells the Disqus service your forum's shortname,\n   * which is the unique identifier for your website as registered\n   * on Disqus. If undefined , the Disqus embed will not load.\n   */\n  shortname: _propTypes2[\"default\"].string.isRequired,\n\n  /**\n   * `identifier` tells the Disqus service how to identify the\n   * current page. When the Disqus embed is loaded, the identifier\n   * is used to look up the correct thread. If disqus_identifier\n   * is undefined, the page's URL will be used. The URL can be\n   * unreliable, such as when renaming an article slug or changing\n   * domains, so we recommend using your own unique way of\n   * identifying a thread.\n   */\n  identifier: _propTypes2[\"default\"].string,\n\n  /**\n   * `title` tells the Disqus service the title of the current page.\n   * This is used when creating the thread on Disqus for the first time.\n   * If undefined, Disqus will use the <title> attribute of the page.\n   * If that attribute could not be used, Disqus will use the URL of the page.\n   */\n  title: _propTypes2[\"default\"].string,\n\n  /**\n   * `url` tells the Disqus service the URL of the current page.\n   * If undefined, Disqus will take the window.location.href.\n   * This URL is used to look up or create a thread if disqus_identifier\n   * is undefined. In addition, this URL is always saved when a thread is\n   * being created so that Disqus knows what page a thread belongs to.\n   */\n  url: _propTypes2[\"default\"].string,\n\n  /**\n   * `category_id` tells the Disqus service the category to be used for\n   * the current page. This is used when creating the thread on Disqus\n   * for the first time.\n   */\n  category_id: _propTypes2[\"default\"].string,\n\n  /**\n   * `onNewComment` function accepts one parameter `comment` which is a\n   * JavaScript object with comment `id` and `text`. This allows you to track\n   * user comments and replies and run a script after a comment is posted.\n   */\n  onNewComment: _propTypes2[\"default\"].func,\n\n  /**\n   * `language` tells the Disqus service which language should be used.\n   * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n   * If undefined, English is used as default one\n   */\n  language: _propTypes2[\"default\"].string\n};\nDisqusThread.defaultProps = {\n  url: typeof window === 'undefined' ? null : window.location.href\n};\nexports[\"default\"] = DisqusThread;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  \"long\": 'MMMM do, y',\n  medium: 'MMM d, y',\n  \"short\": 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  \"long\": 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  \"short\": 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  \"long\": \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  \"short\": '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  \"short\": /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import \"core-js/modules/es6.number.constructor\";\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  \"short\": ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n\nfunction dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","import \"core-js/modules/es6.array.index-of\";\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.map\";\nimport isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}